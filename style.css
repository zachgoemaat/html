*, *:before, *:after {
  box-sizing: border-box;
}

* {
  margin: 0;
  padding: 0;
}

html, body {
  height: 100%;
  width: 100%;
}


.tap {
  height: 50%;
  width: 100%;
  font-size: 3em;
  font-family: Arial;
  text-align: center;
  padding-top: 100px;
}

.red {
  background-color: red;
  transform: rotate(180deg);
}

.blue {
  background-color: blue;
}
JS: On touch, increment the score of the button presser by 1.

// Contains score data:
var scores = {
  red: 0,
  blue: 0
}
var won = false
// Caching document selector in a variable (good method for optimizing performance when lots of elements are queried).
var $taps = $('.tap')

// When someone taps an element with the class "tap", run the function.
$taps.on('touchstart mousedown', function (e) {
  if (!won) {
    // The element that was clicked:
    var $this = $(this)
    // Grabs the second item of the class attribute, which is red or blue respectively.
    var type = $this.attr('class').split(' ')[1]
    // Increments the score.
    scores[type] += 1
    // Change the text.
    $this.text('Your score is ' + scores[type])
    // Add condition for finishing the game.
    if (scores[type] >= 100) {
      // Change the game state.
      won = true
      // Reward the winner.
      $taps.text(type + ' won the game!')
      setTimeout(function () {
        // Reset scores
        scores = {
          red: 0,
          blue: 0
        }
        // Add back play message.
        $taps.text('Tap to play')
        // Reset game state so it's playable again.
        won = false
      }, 3000) // setTimeout uses milliseconds, so 3 * 1000 = 3 seconds.
    }
  }
  // Stop it from doing generic actions like selecting text (Part of the jQuery API).
  return false
})
